#!/usr/bin/env python

import os
import sys

import ulid

sys.path.insert(1, os.path.join(sys.path[0], "../.."))

import requests_oauthlib  # noqa: E402
import typer  # noqa: E402

import dot_init  # noqa: E402, F401
import log

# google docs: https://developers.google.com/identity/openid-connect/openid-connect

logger = log.init("cli")

app = typer.Typer()


@app.command()
def login(email: str = typer.Option("", "--email")):
    client_id = os.environ.get("OPENID_GOOGLE_CLIENT_ID")
    client_secret = os.environ.get("OPENID_GOOGLE_CLIENT_SECRET")
    oauth_uri = os.environ.get("OPENID_GOOGLE_AUTH_URI")
    redirect_uri = os.environ.get("OPENID_GOOGLE_REDIRECT_URI")
    token_uri = os.environ.get("OPENID_GOOGLE_TOKEN_URI")
    client_state = ulid.new().str

    # oauth_scope = [
    #     "openid",
    #     "https://www.googleapis.com/auth/userinfo.email",
    #     "https://www.googleapis.com/auth/userinfo.profile",
    # ]

    oauth_scope = [
        "openid email",
    ]

    oauth_session = requests_oauthlib.OAuth2Session(client_id, redirect_uri=redirect_uri, scope=oauth_scope)

    authorization_url, state = oauth_session.authorization_url(
        oauth_uri,
        # access_type and prompt are Google specific extra parameters.
        access_type="offline",
        login_hint=email,
        prompt="consent",  # none | consent | select_account
        state=client_state,
    )

    logger.info(f"authorize access url:\n{authorization_url}\n")
    # print(f"authorize access url\n{authorization_url}")

    authorization_response = input("enter the full callback URL:\n")

    token = oauth_session.fetch_token(
        token_uri,
        authorization_response=authorization_response,
        # Google specific extra parameter used for client authentication
        client_secret=client_secret,
    )

    logger.info(f"token {token}")

    api_response = oauth_session.get("https://www.googleapis.com/oauth2/v1/userinfo")


if __name__ == "__main__":
    app()
