#!/usr/bin/env python

import os
import random
import sys

sys.path.insert(1, os.path.join(sys.path[0], "../.."))

import faker  # noqa: E402
import sqlalchemy  # noqa: E402
import typer  # noqa: E402

import dot_init  # noqa: E402, F401
import log  # noqa: E402
import services.database.session  # noqa: E402
import services.users  # noqa: E402

logger = log.init("cli")

app = typer.Typer()


@app.command()
def create(count: int = typer.Option(..., "--count")):
    services.database.session.migrate()

    with services.database.session.get() as db:
        fake = faker.Faker()
        cities = ["boston", "chicago", "philadelphia"]

        for i in range(count):
            user_id = f"{fake.first_name().lower()}-{i}"
            mobile = f"+1{fake.msisdn()[0:10]}"

            user_params = {
                "city": cities[random.randrange(len(cities))],
                "email": fake.email(),
                "idp": "default",
                "mobile": mobile,
                "state": "enabled",
            }

            try:
                services.users.Create(db=db, user_id=user_id, params=user_params).call()
            except sqlalchemy.exc.IntegrityError:
                pass


if __name__ == "__main__":
    app()
