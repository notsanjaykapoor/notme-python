#!/usr/bin/env python

import os
import random
import sys

sys.path.insert(1, os.path.join(sys.path[0], "../.."))

import faker  # noqa: E402
import sqlalchemy  # noqa: E402
import typer  # noqa: E402

import dot_init  # noqa: E402, F401
import log  # noqa: E402
import services.database.session  # noqa: E402
import services.users  # noqa: E402

logger = log.init("cli")

app = typer.Typer()

users = [
    {
        "city": "chicago",
        "email": "notsanjaykapoor@gmail.com",
        "idp": "google",
        "state": "enabled",
        "user_id": "notsanjaykapoor",
    },
    {
        "city": "chicago",
        "email": "user-1@authentik.com",
        "idp": "authentik",
        "state": "enabled",
        "user_id": "user-1",
    },
]


@app.command()
def create():
    services.database.session.migrate()

    faker_instance = faker.Faker()

    with services.database.session.get() as db:
        for user_object in users:
            mobile = f"+1{faker_instance.msisdn()[0:10]}"

            user_id = user_object.pop("user_id")
            user_object["mobile"] = mobile

            try:
                services.users.Create(db=db, user_id=user_id, params=user_object).call()
            except sqlalchemy.exc.IntegrityError:
                pass


if __name__ == "__main__":
    app()
