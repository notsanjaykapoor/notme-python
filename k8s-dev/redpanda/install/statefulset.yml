---
# Source: redpanda/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redpanda
  namespace: "default"
  labels:
    helm.sh/chart: redpanda-2.3.15
    app.kubernetes.io/name: redpanda
    app.kubernetes.io/instance: "redpanda"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/component: redpanda
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: redpanda
      app.kubernetes.io/instance: redpanda
  serviceName: redpanda
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redpanda
        app.kubernetes.io/instance: "redpanda"
        app.kubernetes.io/component: redpanda
      annotations:
        checksum/config: b19badd9e69a4c1c233cd943266264c64603bbdca8eb8b4f1b5ac47f529e44e9
    spec:
      securityContext:
        fsGroup: 101
      serviceAccountName: default
      initContainers:
        - name: set-datadir-ownership
          image: busybox:latest
          command: ["/bin/sh", "-c", "chown 101:101 -R /var/lib/redpanda/data"]
          volumeMounts:
            - name: datadir
              mountPath: /var/lib/redpanda/data
        - name: redpanda-configurator
          image: vectorized/redpanda:v22.3.5
          imagePullPolicy: Never # use minikube registry
          command: ["/bin/sh", "-c"]
          env:
            - name: SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: EXTERNAL_ADDRESSES
              value: 
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          args:
            - |
              set -xe
              CONFIG=/etc/redpanda/redpanda.yaml
              POD_ORDINAL=${SERVICE_NAME##*-}

              # Setup config files
              cp /tmp/base-config/redpanda.yaml "${CONFIG}"
              cp /tmp/base-config/bootstrap.yaml /etc/redpanda/.bootstrap.yaml

              # Configure internal kafka listeners
              rpk redpanda --config "$CONFIG" config set redpanda.advertised_kafka_api[0].name internal
              rpk redpanda --config "$CONFIG" config set redpanda.advertised_kafka_api[0].address $(SERVICE_NAME).redpanda.default.svc.cluster.local.
              rpk redpanda --config "$CONFIG" config set redpanda.advertised_kafka_api[0].port 9093

              # Configure external kafka listeners
              rpk redpanda --config "$CONFIG" config set redpanda.advertised_kafka_api[1].address $(SERVICE_NAME).local
              rpk redpanda --config "$CONFIG" config set redpanda.advertised_kafka_api[1].name default
              rpk redpanda --config "$CONFIG" config set redpanda.advertised_kafka_api[1].port 31092
          volumeMounts:
            - name: redpanda
              mountPath: /tmp/base-config
            - name: config
              mountPath: /etc/redpanda
          resources:
            null
      containers:
        - name: redpanda
          image: vectorized/redpanda:v22.3.5
          imagePullPolicy: Never # use minikube registry

          env:
            - name: SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          startupProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - >
                  curl -sv http://localhost:9644/v1/cluster/health_overview |
                  awk '{
                    id = $0; gsub(/.*"controller_id": /, "", id); gsub(/,.*/, "", id)
                    nd_str = $0; gsub(/.*"nodes_down": \[/, "", nd_str); gsub(/\].*/, "", nd_str)
                    FS=","
                    split(nd_str, nd_list)
                    for (i in nd_list) nodes_down[nd_list[i]]=""
                    exit (id in nodes_down)
                  }'
            initialDelaySeconds: 1
            failureThreshold: 120
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - >
                  curl -sv http://localhost:9644/v1/cluster/health_overview
            initialDelaySeconds: 10
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - >
                  curl -sv http://localhost:9644/v1/cluster/health_overview |
                  awk '{
                    id = $0; gsub(/.*"controller_id": /, "", id); gsub(/,.*/, "", id)
                    nd_str = $0; gsub(/.*"nodes_down": \[/, "", nd_str); gsub(/\].*/, "", nd_str)
                    FS=","
                    split(nd_str, nd_list)
                    for (i in nd_list) nodes_down[nd_list[i]]=""
                    exit (id in nodes_down)
                  }'
            initialDelaySeconds: 1
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
          command:
            - rpk
            - redpanda
            - start
            - --smp=1
            - --memory=2048M
            - --reserve-memory=205
            - --default-log-level=info
            - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
            - --advertise-pandaproxy-addr=internal://$(SERVICE_NAME).redpanda.default.svc.cluster.local.:8082,default://$(SERVICE_NAME).redpanda.default.svc.cluster.local.:30082,
          ports:
            - name: admin
              containerPort: 9644
            - name: http
              containerPort: 8082
            - name: http-default
              containerPort: 8083
            - name: kafka
              containerPort: 9093
            - name: kafka-default
              containerPort: 9094
            - name: rpc
              containerPort: 33145
            - name: schemaregistry
              containerPort: 8081
            - name: schema-default
              containerPort: 8080
          volumeMounts:
            - name: datadir
              mountPath: /var/lib/redpanda/data
            - name: config
              mountPath: /etc/redpanda
          resources:
            limits:
              cpu: 1
              memory: 2.5Gi
      volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: datadir
        - name: redpanda
          configMap:
            name: redpanda
        - name: config
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: redpanda
                    app.kubernetes.io/instance: "redpanda"
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: redpanda
            app.kubernetes.io/instance: "redpanda"
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
  volumeClaimTemplates:
    - metadata:
        name: datadir
        labels:
          app.kubernetes.io/name: redpanda
          app.kubernetes.io/instance: "redpanda"
          app.kubernetes.io/component: redpanda
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: "20Gi"
